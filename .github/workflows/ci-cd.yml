name: DevBlog CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'
  PORT: 5000  # Nuevo: Para usar en Docker

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          pytest --cov=app --cov-report=xml --cov-report=term-missing -v
          
      - uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build image
        run: |
          docker build -t devblog:${{ github.sha }} .
          docker build -t devblog:latest .
          
      - name: Test image
        run: |
          docker run -d -p ${{ env.PORT }}:${{ env.PORT }} --name test-app devblog:latest
          sleep 15  # Aumentado a 15s como indica el documento
          curl -f http://localhost:${{ env.PORT }}/api/health || exit 1
          docker stop test-app

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Run security checks
        run: |
          pip install safety bandit
          safety check -r requirements.txt --json --output safety-report.json
          bandit -r app/ -f json -o bandit-report.json || true
          
      - uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            safety-report.json
            bandit-report.json

  deploy:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs: [test, docker-build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Notify
        run: |
          echo "TODOS LOS TESTS PASARON"
          echo "IMAGEN DOCKER CONSTRUIDA"
          echo "ESCANEOS DE SEGURIDAD COMPLETADOS"
          echo "DESPLIEGUE EN RAILWAY CONFIGURADO EN railway.toml"